name: RL Agent PR Training

# Trigger on PR open or update to the main branch
on:
  pull_request:
    branches:
      - main

jobs:
  train_agent:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install torch matplotlib numpy

      - name: Run lightweight training script
        run: |
          # Run your training script but limit episodes for speed
          python -c "
import torch
from rl.agent import DQNAgent
from rl.env import SimpleEnv

device = torch.device('cpu')  # Use CPU on CI

env = SimpleEnv()
agent = DQNAgent(env.state_dim, env.action_dim, device)

num_episodes = 5  # small number for quick CI

for episode in range(num_episodes):
    state = env.reset()
    total_reward = 0
    for t in range(50):  # limit steps per episode
        action = agent.act(state)
        next_state, reward, done, _ = env.step(action)
        agent.remember(state, action, reward, next_state, done)
        agent.replay()
        state = next_state
        total_reward += reward
        if done:
            break
    agent.update_target_model()
    print(f'Episode {episode+1}/{num_episodes} - Reward: {total_reward:.2f}, Epsilon: {agent.epsilon:.2f}')
"